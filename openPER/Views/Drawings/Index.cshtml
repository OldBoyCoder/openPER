@using openPER.ViewModels
@model openPER.ViewModels.DrawingsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Drawings view</h1>
<table class="table table-sm">
    @foreach (var drawing in Model.Drawings)
    {
        <tr>
            <td>@drawing.FullKey</td>
            <td>
                <img src="@Url.Action("Drawing", "Image", new {Make=drawing.MakeCode, Model=drawing.ModelCode, Catalogue=drawing.CatalogueCode, Group = drawing.GroupCode, SubGroup = drawing.SubGroupCode, SubSubGroup=drawing.SubSubGroupCode, Drawing=drawing.DrawingNumber})">
            </td>
        </tr>
    }
</table>
<div class="container horizontal-scrollable">
    <div class="row text-center">
        @{
            int ix = 1;
            @foreach (var drawing in Model.Drawings)
            {
                <div class="col-xs-4">
                    <img src="@Url.Action("Thumbnail", "Image", new { Make = drawing.MakeCode, Model = drawing.ModelCode, Catalogue = drawing.CatalogueCode, Group = drawing.GroupCode, SubGroup = drawing.SubGroupCode, SubSubGroup = drawing.SubSubGroupCode, Drawing = drawing.DrawingNumber })"><br />
                    @{
                        switch (Model.RequestType)
                        {

                            case DrawingsRequestType.Catalogue:
                                @Html.ActionLink($"{drawing.CatalogueCode}/{drawing.GroupCode}/{drawing.SubGroupCode}/{drawing.SubSubGroupCode}/{ix}", "Detail", "Drawings", new { Model.ReleaseCode, drawing.MakeCode, drawing.ModelCode, drawing.CatalogueCode, DrawingNumber = ix++ })
                                break;
                        }
                    }
                </div>

            }
        }
    </div>
</div>
