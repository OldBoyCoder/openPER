@using openPER.ViewModels
@model VinSearchResultsViewModel

@{
    ViewData["Title"] = "VinSearchView Debug";
}
@section Navbar
{
    @await Html.PartialAsync("_Navbar", Model.Navigation)
}

@await Html.PartialAsync("_Breadcrumb", Model.Navigation)
<div class="container-fluid">
    <div class="row">
        <div class="col-lg-3 col-md-3 col-sm-12 col-12">
            @await Html.PartialAsync("_SidebarMenu", Model.Navigation)
        </div>
        <div class="col-lg-9 col-md-9 col-sm-12 col-12">
            @if (Model.Results.Count == 0)
            {
                <p>@Resources.FrontEnd.VinNotFound</p>
            }
            else
            {
                @foreach (var result in Model.Results)
                {

                    <table class="table-sm">
                        <caption>List of vehicle details</caption>
                        <tr><td>MVS</td><td>@Html.DisplayTextFor(m=>result.Mvs)</td></tr>
                        <tr><td>Chassis</td><td>@Html.DisplayTextFor(m=>result.Chassis)</td></tr>
                        <tr><td>Org</td><td>@Html.DisplayTextFor(m=>result.Organization)</td></tr>
                        <tr><td>Motor</td><td>@Html.DisplayTextFor(m=>result.Motor)</td></tr>
                        <tr><td>Date</td><td>@Html.DisplayTextFor(m=>result.BuildDate)</td></tr>
                        <tr><td>Interior colour</td><td>@Html.DisplayTextFor(m=>result.InteriorColourCode) - @result.InteriorColourDescription</td></tr>
                        <tr><td>VIN</td><td>@Html.DisplayTextFor(m=>result.Vin)</td></tr>
                    </table>
                    @foreach (var r in result.Models)
                    {
                        <details>
                            <summary>@Html.ActionLink(r.Description, "Index", "Groups", new { r.Language, r.MakeCode, r.SubMakeCode, r.ModelCode, r.CatalogueCode, VIN=result.Vin, MVS=r.Sincom })</summary>
                            <table class="table-sm">
                                <tr><td>Catalogue</td><td>@r.CatalogueCode - @r.CatalogueDescription</td></tr>
                                <tr><td>Model</td><td>@r.Description</td></tr>
                                <tr><td>Engine type</td><td>@r.EngineType</td></tr>
                                <tr><td>SINCOM</td><td>@r.Sincom</td></tr>
                                <tr><td>@Html.ActionLink("Go to catalogue", "Index", "Groups", new { r.Language, r.MakeCode, r.SubMakeCode, r.ModelCode, r.CatalogueCode, VIN=result.Vin, MVS=r.Sincom })</td></tr>

                                @if (r.FilterOptions.DataSource == FilterDataSource.Sincom)
                                {
                                    <tr><td>Source for option data</td><td>SINCOM code configuration @r.FilterOptions.Mvs</td></tr>
                                }
                                else
                                {
                                    <tr><td>Source for option data</td><td>VIN configuration @r.FilterOptions.Vin</td></tr>
                                }
                                @foreach (var item in r.FilterOptions.Options.Where(x => x.MultiValue))
                                {
                                    <tr><td>@item.TypeDescription</td><td>@item.ValueDescription</td><td>(@item.TypeCode+@item.ValueCode)</td></tr>
                                }
                                @foreach (var item in r.FilterOptions.Options.Where(x => !x.MultiValue).OrderBy(x => x.ValueDescription))
                                {
                                    <tr><td>@item.ValueDescription</td><td>@(item.Present?"Yes":"No")</td><td>(@item.TypeCode)</td></tr>
                                }

                            </table>
                        </details>
                    }
                }
            }
        </div>
    </div>
</div>